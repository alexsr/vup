#version 450

layout (local_size_x = 128) in;

#include "particles.inc.comp"

layout (std430, binding = 3) buffer particles {
    Fluid_particle p[N];
};

layout (std430, binding = 4) buffer demo_constants{
    SPH_demo_constants demo_consts;
};

layout (std430, binding = 5) buffer neighborhood_data {
    int neighbor[NEIGHBOR_ARRAY_SIZE];
};

layout (std430, binding = 6) buffer neighborhood_count {
    int neighbor_counter[N];
};

void main() {
    uint id = gl_GlobalInvocationID.x;
    if (id >= N) {
        return;
    }
    int neighbor_count = 0;
    for (int j = 0; j < id; j++) {
        if (neighbor_count >= NEIGHBOR_AMOUNT) {
            break;
        }
        if (distance(p[id].pos.xyz, p[j].pos.xyz) <= demo_consts.h) {
            neighbor[id * NEIGHBOR_AMOUNT + neighbor_count] = j;
            neighbor_count++;
        }
    }
    for (int j = int(id) + 1; j < N; j++) {
        if (neighbor_count >= NEIGHBOR_AMOUNT) {
            break;
        }
        if (distance(p[id].pos.xyz, p[j].pos.xyz) <= demo_consts.h) {
                neighbor[id * NEIGHBOR_AMOUNT + neighbor_count] = j;
                neighbor_count++;
        }
    }
    neighbor_counter[id] = neighbor_count;
}
